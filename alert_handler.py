# alert_handler.py

import os
import requests
from typing import Any, Dict

# ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å .env
ADMIN_CHAT_ID = int(os.getenv("TELEGRAM_GROUP_ID_ADMIN", "0"))
SEER_CHAT_ID = int(os.getenv("TELEGRAM_GROUP_ID_SEER", "0"))
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ Telegram
def send_telegram_message(chat_id: int, text: str) -> None:
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "Markdown"  # ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏ä‡πâ Markdown ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    }
    resp = requests.post(url, json=payload)
    print(f"sendMessage status={resp.status_code}, response={resp.text}")


# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ alert ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
def handle_alert(payload: Dict[str, Any]) -> None:
    """
    payload ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
    {"type":"coin_topup","data":{"userId":"abc123","amount":100}}
    {"type":"booking_request","data":{"userId":"abc123","seerId":"seer456","slot":"2025-06-10T14:00"}}
    """
    t = payload.get("type")
    d = payload.get("data", {})

    # ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô ‚Äì ‡πÅ‡∏à‡πâ‡∏á Admin group
    if t == "coin_topup":
        user_id = d.get("userId")
        amount = d.get("amount")
        if user_id is None or amount is None:
            print("coin_topup payload missing userId or amount")
            return

        text = f"üí∞ *‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à*\nUser `{user_id}` ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô *{amount}* ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç"
        send_telegram_message(ADMIN_CHAT_ID, text)
        return

    # ‡∏Ñ‡∏¥‡∏ß‡∏î‡∏π‡∏î‡∏ß‡∏á (Booking) ‚Äì ‡πÅ‡∏à‡πâ‡∏á Seer group
    if t == "booking_request":
        user_id = d.get("userId")
        seer_id = d.get("seerId")
        slot = d.get("slot")
        if user_id is None or seer_id is None or slot is None:
            print("booking_request payload missing userId, seerId, or slot")
            return

        text = (
            "üîî *‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏î‡∏π‡∏î‡∏ß‡∏á‡πÉ‡∏´‡∏°‡πà*\n"
            f"User `{user_id}` ‡∏Ç‡∏≠‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏î‡∏π‡∏î‡∏ß‡∏á‡∏Å‡∏±‡∏ö Seer `{seer_id}`\n"
            f"‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤: `{slot}`"
        )
        send_telegram_message(SEER_CHAT_ID, text)
        return

    # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÄ‡∏û‡∏¥‡πà‡∏° elif ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
    # elif t == "another_type":
    #     ...

    print(f"Unhandled alert type: {t}")
